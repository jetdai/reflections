1- How did viewing a diff between two versions of a file help you see the bug that was introduced?
It compare the files and show up the difference

2-How could having easy access to the entire history of a file make you a more efficient programmer in the long term?


3-What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pro: Always have the change of all your data

cons: to many historycal data


4-Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because GIT was made to work for programming purpose you need to track 
the change of a logic.

Google drive is just a file repository

5-How can you use the commands git log and git diff to view the history of files?

git log is used to see all commits with the message and ID, date, time etc

git diff is used to find the difference

6-How might using version control make you more confident to make changes that could break something?

you can go back to previews version

7-Now that you have your workspace set up, what do you want to try using Git for?

Make repository

8-What happens when you initialize a repository? Why do you need to do it?

The repository is created empty a you need to commit it

9-How is the staging area different from the working directory and the repository? What value do you think it offers?

Working area is the version you are actually working and de staging area is the version you are about to commit 
